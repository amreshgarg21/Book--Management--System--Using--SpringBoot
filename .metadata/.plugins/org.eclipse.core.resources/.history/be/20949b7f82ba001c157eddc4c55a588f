package com.api.book.bootrestbook.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToOne;

import com.fasterxml.jackson.annotation.JsonBackReference;

@Entity
public class Author {
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private int authorId;

    @Column(name="first_name")
    private String firstName;
    private String lastName;
    private String language;

    public int getAuthorId() {
        return authorId;
    }
    public void setAuthorId(int authorId) {
        this.authorId = authorId;
    }
    public String getFirstName() {
        return firstName;
    }
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }
    public String getLastName() {
        return lastName;
    }
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
    public String getLanguage() {
        return language;
    }
    public void setLanguage(String language) {
        this.language = language;
    }

    //Doing Bi-directional Mapping
    
    //This automatically connects with the one to one mapping of the author 
    //This also helps in eliminating the extra column created by this mapping
    //So our database schema will remain the same

    @OneToOne(mappedBy = "author") 
    @JsonBackReference
    private Book book;

    //Here, we observe that Book act as a Parent Author act as a Child
    //So, we use Managed reference is used for parent and back reference is used for child.

    public Book getBook() {
        return book;
    }
    public void setBook(Book book) {
        this.book = book;
    }
    

}
