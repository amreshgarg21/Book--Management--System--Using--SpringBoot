package com.api.book.bootrestbook.controllers;

import com.api.book.bootrestbook.helper.FileUploadHelper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

@RestController
public class FileUploadController {
    
    @Autowired
    FileUploadHelper fileUploadHelper;

    @PostMapping("/upload-file")
    public ResponseEntity<String> uploadFile(@RequestParam("file") MultipartFile mFile){
        
        /* 
        System.out.println(mFile.getOriginalFilename());
        System.out.println(mFile.getSize());
        System.out.println(mFile.getContentType());
        System.out.println(mFile.getName());
         */

        try{

            //Validation
            if(mFile.isEmpty()){
                return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Request must contain file!");
            }

            if(mFile.getContentType().equals("image/jpg")){
                return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Only content of JPG are allowed!");
            }

            //Code of Uploading the file

            boolean f = fileUploadHelper.uploadFile(mFile);
            if(f){
                
                //return ResponseEntity.ok("File is uploaded successfully!!!");

                return ResponseEntity.ok(ServletUriComponentsBuilder.fromCurrentContextPath().path("/image/").path(mFile.getOriginalFilename()).toUriString());
                
                //ServletUriComponentsBuilder.fromCurrentContextPath() -> gives localhost:8080
                //path("/image") -> gives /image/
                //getOriginalFilename() -> gives filename

                //So, in all we will get somewhat like localhost:8080/image/filename


            }
        }        
        
        catch(Exception e){
            e.printStackTrace();
        }
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Something Went Wrong, PLEASE TRY AGAIN!");  

    }

}
